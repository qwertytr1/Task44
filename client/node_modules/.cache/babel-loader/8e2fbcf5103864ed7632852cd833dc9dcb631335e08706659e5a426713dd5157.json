{"ast":null,"code":"var _jsxFileName = \"/Users/mahnach04icloud.com/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 3/Task44/client/src/components/AuthProvider/AuthProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    const token = localStorage.getItem('authToken');\n    return !!token; // Проверяем наличие токена для определения статуса аутентификации\n  });\n  const login = token => {\n    if (token) {\n      localStorage.setItem('authToken', token);\n      setIsAuthenticated(true);\n    } else {\n      console.error('Invalid token received. Token was not saved.');\n    }\n  };\n  const logout = () => {\n    // Удаляем токен из localStorage и обновляем состояние\n    localStorage.removeItem('authToken');\n    setIsAuthenticated(false);\n  };\n  const value = useMemo(() => ({\n    isAuthenticated,\n    login,\n    logout\n  }), [isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"fh3kXa/AHZVdC+542v6WWNJCMUk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useMemo","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","login","setItem","console","error","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/mahnach04icloud.com/Desktop/Новая папка 3/Task44/client/src/components/AuthProvider/AuthProvider.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useState,\n  useContext,\n  ReactNode,\n  useMemo,\n} from 'react';\nimport { AuthContextType, AuthProviderProps } from '../../utils/interfaces';\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    const token = localStorage.getItem('authToken');\n    return !!token; // Проверяем наличие токена для определения статуса аутентификации\n  });\n\n  const login = (token: string | null) => {\n    if (token) {\n      localStorage.setItem('authToken', token);\n      setIsAuthenticated(true);\n    } else {\n      console.error('Invalid token received. Token was not saved.');\n    }\n  };\n\n  const logout = () => {\n    // Удаляем токен из localStorage и обновляем состояние\n    localStorage.removeItem('authToken');\n    setIsAuthenticated(false);\n  };\n\n  const value = useMemo(\n    () => ({ isAuthenticated, login, logout }),\n    [isAuthenticated],\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,QAAQ,EACRC,UAAU,EAEVC,OAAO,QACF,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGf,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC3D,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,CAAC,CAACF,KAAK,CAAC,CAAC;EAClB,CAAC,CAAC;EAEF,MAAMG,KAAK,GAAIH,KAAoB,IAAK;IACtC,IAAIA,KAAK,EAAE;MACTC,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEJ,KAAK,CAAC;MACxCD,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLM,OAAO,CAACC,KAAK,CAAC,8CAA8C,CAAC;IAC/D;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAN,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;IACpCT,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMU,KAAK,GAAGnB,OAAO,CACnB,OAAO;IAAEQ,eAAe;IAAEK,KAAK;IAAEI;EAAO,CAAC,CAAC,EAC1C,CAACT,eAAe,CAClB,CAAC;EAED,oBAAON,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EAAEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACjB,EAAA,CA3BWF,YAAyC;AAAAoB,EAAA,GAAzCpB,YAAyC;AA6BtD,OAAO,MAAMqB,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAG7B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACyB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}