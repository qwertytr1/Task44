{"ast":null,"code":"var _jsxFileName = \"/Users/mahnach04icloud.com/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 3/Task44/client/src/components/AuthProvider/ProtectRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectRoute, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectRoute;\nexport default ProtectRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectRoute","children","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mahnach04icloud.com/Desktop/Новая папка 3/Task44/client/src/components/AuthProvider/ProtectRoute.tsx"],"sourcesContent":["import React, { JSX } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthProvider';\n\nconst ProtectRoute: React.FC<{ children: JSX.Element }> = ({ children }) => {\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return children;\n};\n\nexport default ProtectRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAe,OAAO;AAClC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM;IAAEC;EAAgB,CAAC,GAAGN,OAAO,CAAC,CAAC;EAErC,IAAI,CAACM,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,OAAOP,QAAQ;AACjB,CAAC;AAACC,EAAA,CARIF,YAAiD;EAAA,QACzBH,OAAO;AAAA;AAAAY,EAAA,GAD/BT,YAAiD;AAUvD,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}